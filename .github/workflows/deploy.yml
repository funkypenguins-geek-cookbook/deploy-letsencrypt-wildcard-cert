name: deploy-letsencrypt-wildcard-cert

# Trigger either on a push to master, on when the repo is _starred_ 
# (the if statement in the deploy job ensures only the repo owner can do this)
on:
  push:
    branches:
      - master
  watch:
    types: [started]

env:
  CHART_NAME: 'secret-replicator'
  CHART_REPO: 'https://kiwigrid.github.io'
  RELEASE_NAME: 'letsencrypt-wildcard-cert'
  KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'

jobs:
  # Since we're allowing the workflow to be triggered with a star, only trigger if the repo owner performed
  # the action which triggered us (https://stackoverflow.com/questions/58933155/manual-workflow-triggers-in-github-actions/58965362#58965362)
  i-can-haz-access: 
    runs-on: ubuntu-latest

    steps:
    - uses: octokit/request-action@v2.0.0
      with:
        route: GET /repos/:repository/collaborators/${{ github.actor }}
        repository: ${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: [i-can-haz-access] # Don't proceed unless authorize step above passed
    name: Deploy chart
    runs-on: ubuntu-latest
    steps:
            
    - name: 'Deploy chart'
      uses: 'deliverybot/helm@master'
      with:
        release: '${{env.RELEASE_NAME}}'
        namespace: '${{env.RELEASE_NAME}}'
        helm: 'helm3'
        chart: '${{env.CHART_NAME}}'
        repository: '${{env.CHART_REPO}}'

        # Insert values.yaml overrides here, indented as you would in a regular YAML file
        values: |
          secretList: "letsencrypt-wildcard-cert"

    # Check out the code
    - uses: actions/checkout@v2

    - name: Prepare to inject extra manifests [1/2]
      run: |
        echo "::set-output name=yaml::$(cat manifests/*.yaml)"
      id: get_yaml

    - name: Perform placeholder replacement on extra manifests [2/2]
      uses: BjornLuG/substitute-string-action@v1
      id: sub
      with:
        _input-text: '${{ steps.get_yaml.outputs.yaml }}'
        _output-file: .github/extra_manifests.yaml
        _format-key: '%%key%%'
        dnszone: ${{ secrets.DNSZONE }}
        cloudflare_email: ${{ secrets.CLOUDFLARE_EMAIL }}

    - name: Prepare the kubeconfig for the next step [1/2]
      uses: azure/k8s-set-context@v1
      with:
        kubeconfig: '${{ secrets.KUBECONFIG }}'

    - name: Insert secret into k8s [2/2]
      uses: azure/k8s-create-secret@v1
      with:
        namespace: '${{env.RELEASE_NAME}}'
        secret-type: 'generic'
        arguments:  --from-literal=api-token=${{ secrets.CLOUDFLARE_API_TOKEN }}
        secret-name: cloudflare-api-token-secret       
      env:
        KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'

    - name: Deploy extra manifests into K8s
      uses: azure/k8s-deploy@v1
      with:
        namespace: '${{env.RELEASE_NAME}}'
        manifests: |
            .github/extra_manifests.yaml
            banana
        action: deploy
